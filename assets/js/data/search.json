[ { "title": "Mysql InnoDB 索引模型", "url": "/posts/mysql-index/", "categories": "Mysql", "tags": "Mysql", "date": "2022-05-31 20:00:00 +0600", "snippet": "InnoDB引擎InnoDB现在是mysql的默认引擎 ，而引擎的作用是储存和查询数据。相应就会有效率问题，查更为突出，也有就了索引，就是为了提高查询效率，好比现代汉语字典的目录一样。InnoDB的索引模型是B+树。索引为什么可以提高查询效率？读数据的时候，需要将数据从磁盘读到内存中，访问的单位是页，Mysql的页是 16K，这其中就有IO操作，非常耗时，读取一笔记录的时候大概是10ms。所以说减少IO次数，就会提高查询效率。索引类型 主键索引 &amp;lt;id, row&amp;gt; Primary Key 如果有，则为主键索引 Unique Key ( first) 如果没有1，且有uk，则为主键索引 Row ID (6 byte) 如果没有pk且没有合适的uk，则Row ID为主键索引 辅助索引 &amp;lt;index, id&amp;gt; ​ 除了主键索引，其他的都是辅助索引。 索引模型哈希优点：适合等值查询缺点：范围查询B树 vs B+树B+树有B树的所有特点但是B+树范围查找更快，因为B树的数据存储在叶子和非叶子节点上，而B+树的数据只存储在叶子节点上，且这些叶子节点通过指针依次按顺序进行连接，所以速度特别快。所以InnoDb选择了B+树.参考链接 https://dev.mysql.com/doc/refman/5.7/en/innodb-index-types.html https://medium.com/@mena.meseha/what-is-the-difference-between-mysql-innodb-b-tree-index-and-hash-index-ed8f2ce66d69 https://draveness.me/whys-the-design-mysql-b-plus-tree/ " }, { "title": "开发工具", "url": "/posts/handy-tools/", "categories": "Tool", "tags": "Tool", "date": "2022-05-25 20:00:00 +0600", "snippet": "Terminal Termius iTerm编辑器 Vim Jetbrain (Phpstorm &amp;amp; Goland ) 数据库客户端 MyCli Navicat Medis intellij-elasticsearch抓包 ProxymanAPI Tool PostmanMac工具 Alfred PDF Expert Xnip 自动切换输入法 Paste Now AIDente MarkDown Typora Craft暂时想起来这些，后面想起有啥好用的软件了，再填上来 ！" }, { "title": "该写点啥了", "url": "/posts/%E8%AF%A5%E5%86%99%E7%82%B9%E5%95%A5%E4%BA%86/", "categories": "闲聊", "tags": "闲聊", "date": "2022-05-10 20:00:00 +0600", "snippet": "也没有什么要记录的，但是就想写点啥。不写 呢，感觉自己啥都没学到！写了呢 ，感觉学到的东西都很简单！还是写点吧，不至于以后看到自己的碌碌无为而迷茫。。。" } ]
